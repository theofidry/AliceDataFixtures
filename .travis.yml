language: php

cache:
  directories:
    - "$HOME/.composer/cache"

php:
  - '7.0'
  - '7.1'
  - nightly

services:
  - mysql

matrix:
  fast_finish: true
  include:
    - php: '7.0'
      env:
        - COVERAGE='true'
        - COMPOSER_FLAGS='--prefer-lowest'

    # Doctrine bridge
    - php: '7.0'
      env:
        - COVERAGE='true'
        - DOCTRINE_VERSION='~2.5.0'
        - COMPOSER_FLAGS='--prefer-lowest'

    - php: '7.0'
      env:
        - DOCTRINE_VERSION='~2.5.0'

    # Eloquent bridge
    - php: '7.0'
      env:
        - COVERAGE='true'
        - ELOQUENT_VERSION='~5.0.0'
        - COMPOSER_FLAGS='--prefer-lowest'
    - php: '7.0'
      env:
        - ELOQUENT_VERSION='~5.1.0'
    - php: '7.0'
      env:
        - ELOQUENT_VERSION='~5.2.0'
    - php: '7.0'
      env:
        - ELOQUENT_VERSION='~5.3.0@dev'

    # Symfony bridge
    - php: '7.0'
      env:
        - COVERAGE='true'
        - SYMFONY_VERSION='~3.0.0'
        - COMPOSER_FLAGS='--prefer-lowest'
    - php: '7.0'
      env: SYMFONY_VERSION='~3.1.0'
    - php: '7.0'
      env: SYMFONY_VERSION='~3.2.0@dev'

  allow_failures:
    - php: nightly
    - env: ELOQUENT_VERSION='~5.3.0@dev'
    - env: SYMFONY_VERSION='~3.2.0@dev'

before_install:
  - set -eo pipefail
  - echo "memory_limit=-1" >> ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/travis.ini
  # From https://github.com/travis-ci/travis-ci/issues/5780#issuecomment-196308406
  - |
    XDEBUG_INI="/home/travis/.phpenv/versions/$(phpenv version-name)/etc/conf.d/xdebug.ini"
    if [ ! -f "$XDEBUG_INI" ]; then
        return
    fi
    function composer()
    {
      mv $XDEBUG_INI ~/xdebug.ini
      COMPOSER="$(which composer)"
      $COMPOSER "$@"
      STATUS=$?
      mv ~/xdebug.ini $XDEBUG_INI

      return $STATUS
    }
  - |
    if [ "$TRAVIS_PHP_VERSION" = "nightly" ]; then
        COMPOSER_FLAGS="$COMPOSER_FLAGS --ignore-platform-reqs"
    fi
  - PHPUNIT_BIN='vendor/bin/phpunit'
  - PHPUNIT_CONFIG='phpunit.xml.dist'
  - PHPUNIT_FLAGS='--stop-on-failure --verbose'

install:
  - composer update --prefer-dist $COMPOSER_FLAGS
  - |
    if [ -n "$DOCTRINE_VERSION" ]; then
        composer bin doctrine require --no-update doctrine/orm "doctrine/orm:${DOCTRINE_VERSION}"

        PHPUNIT_CONFIG='phpunit_doctrine.xml.dist'
        PHPUNIT_BIN='vendor-bin/doctrine/vendor/phpunit/phpunit/phpunit'
    fi
  - |
    if [ -n "$ELOQUENT_VERSION" ]; then
        composer bin symfony require --no-update symfony/symfony "illuminate/database:${ELOQUENT_VERSION}"

        PHPUNIT_CONFIG='phpunit_eloquent.xml.dist'
        PHPUNIT_BIN='vendor-bin/eloquent/vendor/phpunit/phpunit/phpunit'
    fi
  - |
    if [ -n "$SYMFONY_VERSION" ]; then
        composer bin symfony require --no-update symfony/symfony "symfony/symfony:${SYMFONY_VERSION}"

        PHPUNIT_CONFIG='phpunit_symfony.xml.dist'
        PHPUNIT_BIN='vendor-bin/symfony/vendor/phpunit/phpunit/phpunit'
    fi
  - composer bin all update --prefer-dist $COMPOSER_FLAGS
  - mysql -u root -e "create database IF NOT EXISTS fidry_alice_data_fixtures;"
  - |
    if [ -n "$DOCTRINE_VERSION" ]; then
        php vendor-bin/doctrine/vendor/doctrine/orm/bin/doctrine o:s:c
    elif [Â -n "$ELOQUENT_VERSION" ]; then
        php bin/eloquent_migrate
    elif [ -n "$SYMFONY_VERSION" ]; then
        php bin/console d:s:c
    fi

script:
  - |
    if [ -n "$COVERAGE" ]; then
        phpdbg -qrr $PHPUNIT_BIN -c $PHPUNIT_CONFIG $PHPUNIT_FLAGS --testdox --coverage-text
    else
        $PHPUNIT_BIN -c $PHPUNIT_CONFIG $PHPUNIT_FLAGS
    fi

notifications:
  email: false

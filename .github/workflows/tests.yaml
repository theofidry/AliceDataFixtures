name: Test

on:
    pull_request:
    push:
        branches: [ master ]

# this fixes the input device is not a TTY .. see https://github.com/docker/compose/issues/5696
env:
    COMPOSE_INTERACTIVE_NO_CLI: 1
    DB_HOST: 'mysql'

jobs:
    test:
        name: PHP ${{ matrix.php-version }} + ${{ matrix.dependencies }} + ${{ matrix.variant }}

        runs-on: ubuntu-18.04

        strategy:
            matrix:
                php-version:
                    - '7.4'
                    - '8.0'
                    - '8.1'
                dependencies: [ highest ]
                variant: [ normal ]
                include:
                    -   php-version: '7.4'
                        dependencies: lowest
                        variant: normal
                    -   php-version: '7.4'
                        dependencies: highest
                        variant: 'symfony/symfony:"~4.4.0"'
                    -   php-version: '7.4'
                        dependencies: highest
                        variant: 'symfony/symfony:"~5.3.0"'

        steps:
            -   name: Checkout
                uses: actions/checkout@v2

            -   name: Install PHP with extensions
                uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ matrix.php-version }}
                    coverage: xdebug
                    tools: phpenv, pecl, composer:v2
                    extensions: mongodb

            -   name: Configure
                run: |
                    set -eo pipefail
                    PHPUNIT_FLAGS='--stop-on-failure --verbose'
                    perl -pi -e 's/^}$/,"provide":{"ext-mongo":"*"}}/' composer.json

            -   name: Install variant
                if: matrix.variant != 'normal'
                run: composer require --dev --no-update ${{ matrix.variant }}

            -   name: Install Composer dependencies (${{ matrix.dependencies }})
                uses: ramsey/composer-install@v1
                with:
                    dependency-versions: ${{ matrix.dependencies }}
                    composer-options: "--prefer-dist --prefer-stable"

            # Split the bin updates to avoid GA to time-out the task
            -   name: Install doctrine Composer bin dependencies
                run: composer bin doctrine update
                timeout-minutes: 2

            -   name: Install MongoDB Composer bin dependencies
                run: composer bin doctrine_mongodb update
                timeout-minutes: 2

            -   name: Install PHPCR Composer bin dependencies
                run: composer bin doctrine_phpcr update
                timeout-minutes: 2

            -   name: Install Eloquent Composer bin dependencies
                run: composer bin eloquent update
                timeout-minutes: 2

            # There is a known issue here with Composer
            # see https://github.com/composer/composer/issues/10200
            # Meanwhile we break down the installation as a workaround.
            # Once this is fixed the whole bin dependencies can probably be installed
            # in one step with a timeout adjustment
            -   name: Remove Symfony from ProxyManager Composer bin dependencies
                run: composer bin proxy-manager remove --dev symfony/symfony --no-update
            -   name: Install ProxyManager Composer bin dependencies
                run: composer bin proxy-manager update
                timeout-minutes: 2
            -   name: Install Symfony for ProxyManager Composer bin dependencies
                run: composer bin proxy-manager require --dev "symfony/symfony:^4.4.32 || ^5.3.9"
                timeout-minutes: 2

            -   name: Install Symfony Composer bin dependencies
                run: composer bin symfony update
                timeout-minutes: 2

            -   name: Install CoversValidator Composer bin dependencies
                run: composer bin covers-validator install
                timeout-minutes: 2

            -   name: Install PHP-CS-Fixer Composer bin dependencies
                run: composer bin php-cs-fixer install
                timeout-minutes: 2

            -   name: Start the Docker containers
                run: make start_databases

            -   name: Run Tests
                run: make test
